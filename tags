!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AAC	input/kvp_input_file.h	/^        AAC$/;"	e	enum:KVP_Input_File::FILE_TYPE
AI_URL	ai/kvp_aiengine.h	8;"	d
APPID	ai/websocketclientmanager.cpp	/^const int APPID = 25532607;$/;"	v
APPKEY	ai/websocketclientmanager.cpp	/^const char* APPKEY = "ESMjcGPyzNlBMBEt7tD2bWzz";$/;"	v
AR	Makefile	/^AR            = ar cqs$/;"	m
BufferSize	input/kvp_input_real.h	8;"	d
CC	Makefile	/^CC            = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS        = -pipe -g -Wall -W -D_REENTRANT -fPIC $(DEFINES)$/;"	m
CHK_DIR_EXISTS	Makefile	/^CHK_DIR_EXISTS= test -d$/;"	m
CLOSE	kvp_actions.h	/^        CLOSE,$/;"	e	enum:KVP_Actions::TYPE
COMPRESS	Makefile	/^COMPRESS      = gzip -9f$/;"	m
COPY	Makefile	/^COPY          = cp -f$/;"	m
COPY_DIR	Makefile	/^COPY_DIR      = cp -f -R$/;"	m
COPY_FILE	Makefile	/^COPY_FILE     = cp -f$/;"	m
CXX	Makefile	/^CXX           = g++$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS      = -pipe -g -std=gnu++11 -Wall -W -D_REENTRANT -fPIC $(DEFINES)$/;"	m
DBUS	kvp_actions.h	/^        DBUS$/;"	e	enum:KVP_Actions::TYPE
DEFAULT_SRC_NB_SAMPLES	packet/kvp_packet.h	10;"	d
DEFINES	Makefile	/^DEFINES       = -DQT_DEPRECATED_WARNINGS -DWEBSOCKET_AI -DQT_QML_DEBUG -DQT_MULTIMEDIA_LIB -DQT_WIDGETS_LIB -DQT_GUI_LIB -DQT_WEBSOCKETS_LIB -DQT_NETWORK_LIB -DQT_DBUS_LIB -DQT_CORE_LIB$/;"	m
DEL_DIR	Makefile	/^DEL_DIR       = rmdir$/;"	m
DEL_FILE	Makefile	/^DEL_FILE      = rm -f$/;"	m
DESTDIR	Makefile	/^DESTDIR       = $/;"	m
DEV_PID	ai/websocketclientmanager.cpp	/^const int DEV_PID = 15372;$/;"	v
DIST	Makefile	/^DIST          = \/usr\/lib\/aarch64-linux-gnu\/qt5\/mkspecs\/features\/spec_pre.prf \\$/;"	m
DISTDIR	Makefile	/^DISTDIR = \/home\/c\/project\/resample-test\/.tmp\/resample-test1.0.0$/;"	m
DISTNAME	Makefile	/^DISTNAME      = resample-test1.0.0$/;"	m
EQ	Makefile	/^EQ            = =$/;"	m
FILE_TYPE	input/kvp_input_file.h	/^    enum FILE_TYPE {$/;"	g	class:KVP_Input_File
HOST	ai/websocketclientmanager.cpp	/^const std::string HOST = "vop.baidu.com";$/;"	v
INCPATH	Makefile	/^INCPATH       = -I. -isystem \/usr\/include\/aarch64-linux-gnu\/qt5 -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtMultimedia -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtWidgets -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtGui -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtWebSockets -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtNetwork -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtDBus -isystem \/usr\/include\/aarch64-linux-gnu\/qt5\/QtCore -I. -I. -I\/usr\/lib\/aarch64-linux-gnu\/qt5\/mkspecs\/linux-g++$/;"	m
INSTALL_DIR	Makefile	/^INSTALL_DIR   = cp -f -R$/;"	m
INSTALL_FILE	Makefile	/^INSTALL_FILE  = install -m 644 -p$/;"	m
INSTALL_PROGRAM	Makefile	/^INSTALL_PROGRAM = install -m 755 -p$/;"	m
KVP_ACTIONS_H	kvp_actions.h	2;"	d
KVP_AIENGINE_H	ai/kvp_aiengine.h	2;"	d
KVP_AIEngine	ai/kvp_aiengine.cpp	/^KVP_AIEngine::KVP_AIEngine(QObject *parent) : QObject(parent)$/;"	f	class:KVP_AIEngine
KVP_AIEngine	ai/kvp_aiengine.h	/^class KVP_AIEngine : public QObject$/;"	c
KVP_APPFUNCTIONS_H	kvp_appfunctions.h	2;"	d
KVP_Actions	kvp_actions.cpp	/^KVP_Actions::KVP_Actions()$/;"	f	class:KVP_Actions
KVP_Actions	kvp_actions.h	/^class KVP_Actions : public QObject$/;"	c
KVP_AppFunctions	kvp_appfunctions.cpp	/^KVP_AppFunctions::KVP_AppFunctions()$/;"	f	class:KVP_AppFunctions
KVP_AppFunctions	kvp_appfunctions.h	/^class KVP_AppFunctions$/;"	c
KVP_DBUSADAPTER_H	dbus/kvp_dbusadapter.h	2;"	d
KVP_DBusAdapter	dbus/kvp_dbusadapter.cpp	/^KVP_DBusAdapter::KVP_DBusAdapter(QObject *parent) : QObject(parent)$/;"	f	class:KVP_DBusAdapter
KVP_DBusAdapter	dbus/kvp_dbusadapter.h	/^class KVP_DBusAdapter : public QObject$/;"	c
KVP_INPUT_FILE_H	input/kvp_input_file.h	2;"	d
KVP_INPUT_H	input/kvp_input.h	2;"	d
KVP_INPUT_REAL_H	input/kvp_input_real.h	2;"	d
KVP_Input	input/kvp_input.cpp	/^KVP_Input::KVP_Input(QObject *parent) :$/;"	f	class:KVP_Input
KVP_Input	input/kvp_input.h	/^class KVP_Input : public QObject$/;"	c
KVP_Input_File	input/kvp_input_file.cpp	/^KVP_Input_File::KVP_Input_File()$/;"	f	class:KVP_Input_File
KVP_Input_File	input/kvp_input_file.h	/^class KVP_Input_File : public KVP_Input$/;"	c
KVP_Input_Real	input/kvp_input_real.cpp	/^KVP_Input_Real::KVP_Input_Real()$/;"	f	class:KVP_Input_Real
KVP_Input_Real	input/kvp_input_real.h	/^class KVP_Input_Real : public KVP_Input$/;"	c
KVP_PACKET_H	packet/kvp_packet.h	2;"	d
KVP_Packet	packet/kvp_packet.cpp	/^KVP_Packet::KVP_Packet()$/;"	f	class:KVP_Packet
KVP_Packet	packet/kvp_packet.h	/^class KVP_Packet$/;"	c
KVP_RESAMPLE_H	kvp_resample.h	2;"	d
KVP_Resample	kvp_resample.cpp	/^KVP_Resample::KVP_Resample()$/;"	f	class:KVP_Resample
KVP_Resample	kvp_resample.h	/^class KVP_Resample$/;"	c
KVP_VOICETRANSFER_H	voice/kvp_voicetransfer.h	2;"	d
KVP_VoiceTransfer	voice/kvp_voicetransfer.cpp	/^KVP_VoiceTransfer::KVP_VoiceTransfer(QObject *parent) : QObject(parent)$/;"	f	class:KVP_VoiceTransfer
KVP_VoiceTransfer	voice/kvp_voicetransfer.h	/^class KVP_VoiceTransfer : public QObject$/;"	c
LFLAGS	Makefile	/^LFLAGS        = $/;"	m
LIBS	Makefile	/^LIBS          = $(SUBLIBS) -lswresample -lavutil \/usr\/lib\/aarch64-linux-gnu\/libQt5Multimedia.so \/usr\/lib\/aarch64-linux-gnu\/libQt5Widgets.so \/usr\/lib\/aarch64-linux-gnu\/libQt5Gui.so \/usr\/lib\/aarch64-linux-gnu\/libQt5WebSockets.so \/usr\/lib\/aarch64-linux-gnu\/libQt5Network.so \/usr\/lib\/aarch64-linux-gnu\/libQt5DBus.so \/usr\/lib\/aarch64-linux-gnu\/libQt5Core.so \/usr\/lib\/aarch64-linux-gnu\/libGL.so -lpthread   $/;"	m
LINK	Makefile	/^LINK          = g++$/;"	m
MAKEFILE	Makefile	/^MAKEFILE      = Makefile$/;"	m
MAX_DATASIZE	voice/kvp_voicetransfer.h	6;"	d
MKDIR	Makefile	/^MKDIR         = mkdir -p$/;"	m
MOVE	Makefile	/^MOVE          = mv -f$/;"	m
OBJECTS	Makefile	/^OBJECTS       = kvp_aiengine.o \\$/;"	m
OBJECTS_DIR	Makefile	/^OBJECTS_DIR   = .\/$/;"	m
OPEN	kvp_actions.h	/^        OPEN,$/;"	e	enum:KVP_Actions::TYPE
PATH	ai/websocketclientmanager.cpp	/^const std::string PATH = "\/realtime_asr";$/;"	v
PCM	input/kvp_input_file.h	/^        PCM,$/;"	e	enum:KVP_Input_File::FILE_TYPE
PORT	ai/websocketclientmanager.cpp	/^const int PORT = 80;$/;"	v
QINSTALL	Makefile	/^QINSTALL      = \/usr\/lib\/qt5\/bin\/qmake -install qinstall$/;"	m
QINSTALL_PROGRAM	Makefile	/^QINSTALL_PROGRAM = \/usr\/lib\/qt5\/bin\/qmake -install qinstall -exe$/;"	m
QMAKE	Makefile	/^QMAKE         = \/usr\/lib\/qt5\/bin\/qmake$/;"	m
QMAKE_TARGET	Makefile	/^QMAKE_TARGET  = resample-test$/;"	m
QT_MOC_LITERAL	moc_kvp_actions.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_actions.cpp	39;"	d	file:
QT_MOC_LITERAL	moc_kvp_aiengine.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_aiengine.cpp	45;"	d	file:
QT_MOC_LITERAL	moc_kvp_dbusadapter.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_dbusadapter.cpp	39;"	d	file:
QT_MOC_LITERAL	moc_kvp_input.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_input.cpp	45;"	d	file:
QT_MOC_LITERAL	moc_kvp_input_file.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_input_file.cpp	39;"	d	file:
QT_MOC_LITERAL	moc_kvp_input_real.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_input_real.cpp	42;"	d	file:
QT_MOC_LITERAL	moc_kvp_voicetransfer.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_voicetransfer.cpp	48;"	d	file:
QT_MOC_LITERAL	moc_kvp_voicetransferthread.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_kvp_voicetransferthread.cpp	39;"	d	file:
QT_MOC_LITERAL	moc_websocketclientmanager.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_websocketclientmanager.cpp	75;"	d	file:
QT_MOC_LITERAL	moc_widget.cpp	27;"	d	file:
QT_MOC_LITERAL	moc_widget.cpp	43;"	d	file:
RANLIB	Makefile	/^RANLIB        = $/;"	m
SED	Makefile	/^SED           = sed$/;"	m
SOURCES	Makefile	/^SOURCES       = ai\/kvp_aiengine.cpp \\$/;"	m
STRIP	Makefile	/^STRIP         = strip$/;"	m
SYMLINK	Makefile	/^SYMLINK       = ln -f -s$/;"	m
TAR	Makefile	/^TAR           = tar -cf$/;"	m
TARGET	Makefile	/^TARGET        = resample-test$/;"	m
TYPE	kvp_actions.h	/^    enum TYPE{$/;"	g	class:KVP_Actions
UI_WIDGET_H	ui_widget.h	10;"	d
Ui	ui_widget.h	/^namespace Ui {$/;"	n
Ui	widget.h	/^namespace Ui { class Widget; }$/;"	n
Ui_Widget	ui_widget.h	/^class Ui_Widget$/;"	c
WEBSOCKETCLIENTMANAGER_H	ai/websocketclientmanager.h	2;"	d
WIDGET_H	widget.h	2;"	d
WebSocketClientManager	ai/websocketclientmanager.cpp	/^WebSocketClientManager::WebSocketClientManager(QObject *parent)$/;"	f	class:WebSocketClientManager
WebSocketClientManager	ai/websocketclientmanager.h	/^class WebSocketClientManager : public QObject$/;"	c
Widget	ui_widget.h	/^    class Widget: public Ui_Widget {};$/;"	c	namespace:Ui
Widget	widget.cpp	/^Widget::Widget(QWidget *parent)$/;"	f	class:Widget
Widget	widget.h	/^class Widget : public QWidget$/;"	c
_GNU_SOURCE	moc_predefs.h	403;"	d
_LP64	moc_predefs.h	325;"	d
_STDC_PREDEF_H	moc_predefs.h	193;"	d
__AARCH64EL__	moc_predefs.h	234;"	d
__AARCH64_CMODEL_SMALL__	moc_predefs.h	65;"	d
__ARM_64BIT_STATE	moc_predefs.h	210;"	d
__ARM_ALIGN_MAX_PWR	moc_predefs.h	152;"	d
__ARM_ALIGN_MAX_STACK_PWR	moc_predefs.h	86;"	d
__ARM_ARCH	moc_predefs.h	269;"	d
__ARM_ARCH_8A	moc_predefs.h	289;"	d
__ARM_ARCH_ISA_A64	moc_predefs.h	379;"	d
__ARM_ARCH_PROFILE	moc_predefs.h	225;"	d
__ARM_FEATURE_CLZ	moc_predefs.h	263;"	d
__ARM_FEATURE_FMA	moc_predefs.h	194;"	d
__ARM_FEATURE_IDIV	moc_predefs.h	52;"	d
__ARM_FEATURE_NUMERIC_MAXMIN	moc_predefs.h	359;"	d
__ARM_FEATURE_UNALIGNED	moc_predefs.h	40;"	d
__ARM_FP	moc_predefs.h	54;"	d
__ARM_FP16_ARGS	moc_predefs.h	179;"	d
__ARM_FP16_FORMAT_IEEE	moc_predefs.h	161;"	d
__ARM_NEON	moc_predefs.h	330;"	d
__ARM_PCS_AAPCS64	moc_predefs.h	229;"	d
__ARM_SIZEOF_MINIMAL_ENUM	moc_predefs.h	94;"	d
__ARM_SIZEOF_WCHAR_T	moc_predefs.h	6;"	d
__ATOMIC_ACQUIRE	moc_predefs.h	7;"	d
__ATOMIC_ACQ_REL	moc_predefs.h	404;"	d
__ATOMIC_CONSUME	moc_predefs.h	369;"	d
__ATOMIC_RELAXED	moc_predefs.h	322;"	d
__ATOMIC_RELEASE	moc_predefs.h	405;"	d
__ATOMIC_SEQ_CST	moc_predefs.h	383;"	d
__BIGGEST_ALIGNMENT__	moc_predefs.h	120;"	d
__BYTE_ORDER__	moc_predefs.h	349;"	d
__CHAR16_TYPE__	moc_predefs.h	252;"	d
__CHAR32_TYPE__	moc_predefs.h	355;"	d
__CHAR_BIT__	moc_predefs.h	13;"	d
__CHAR_UNSIGNED__	moc_predefs.h	62;"	d
__DBL_DECIMAL_DIG__	moc_predefs.h	339;"	d
__DBL_DENORM_MIN__	moc_predefs.h	24;"	d
__DBL_DIG__	moc_predefs.h	76;"	d
__DBL_EPSILON__	moc_predefs.h	323;"	d
__DBL_HAS_DENORM__	moc_predefs.h	215;"	d
__DBL_HAS_INFINITY__	moc_predefs.h	128;"	d
__DBL_HAS_QUIET_NAN__	moc_predefs.h	278;"	d
__DBL_MANT_DIG__	moc_predefs.h	304;"	d
__DBL_MAX_10_EXP__	moc_predefs.h	376;"	d
__DBL_MAX_EXP__	moc_predefs.h	142;"	d
__DBL_MAX__	moc_predefs.h	125;"	d
__DBL_MIN_10_EXP__	moc_predefs.h	37;"	d
__DBL_MIN_EXP__	moc_predefs.h	2;"	d
__DBL_MIN__	moc_predefs.h	171;"	d
__DEC128_EPSILON__	moc_predefs.h	145;"	d
__DEC128_MANT_DIG__	moc_predefs.h	389;"	d
__DEC128_MAX_EXP__	moc_predefs.h	367;"	d
__DEC128_MAX__	moc_predefs.h	137;"	d
__DEC128_MIN_EXP__	moc_predefs.h	208;"	d
__DEC128_MIN__	moc_predefs.h	182;"	d
__DEC128_SUBNORMAL_MIN__	moc_predefs.h	245;"	d
__DEC32_EPSILON__	moc_predefs.h	60;"	d
__DEC32_MANT_DIG__	moc_predefs.h	374;"	d
__DEC32_MAX_EXP__	moc_predefs.h	267;"	d
__DEC32_MAX__	moc_predefs.h	92;"	d
__DEC32_MIN_EXP__	moc_predefs.h	130;"	d
__DEC32_MIN__	moc_predefs.h	139;"	d
__DEC32_SUBNORMAL_MIN__	moc_predefs.h	236;"	d
__DEC64_EPSILON__	moc_predefs.h	206;"	d
__DEC64_MANT_DIG__	moc_predefs.h	256;"	d
__DEC64_MAX_EXP__	moc_predefs.h	46;"	d
__DEC64_MAX__	moc_predefs.h	250;"	d
__DEC64_MIN_EXP__	moc_predefs.h	291;"	d
__DEC64_MIN__	moc_predefs.h	308;"	d
__DEC64_SUBNORMAL_MIN__	moc_predefs.h	388;"	d
__DECIMAL_DIG__	moc_predefs.h	104;"	d
__DEC_EVAL_METHOD__	moc_predefs.h	342;"	d
__DEPRECATED	moc_predefs.h	140;"	d
__ELF__	moc_predefs.h	222;"	d
__EXCEPTIONS	moc_predefs.h	276;"	d
__FINITE_MATH_ONLY__	moc_predefs.h	39;"	d
__FLOAT_WORD_ORDER__	moc_predefs.h	198;"	d
__FLT128_DECIMAL_DIG__	moc_predefs.h	394;"	d
__FLT128_DENORM_MIN__	moc_predefs.h	57;"	d
__FLT128_DIG__	moc_predefs.h	203;"	d
__FLT128_EPSILON__	moc_predefs.h	391;"	d
__FLT128_HAS_DENORM__	moc_predefs.h	202;"	d
__FLT128_HAS_INFINITY__	moc_predefs.h	163;"	d
__FLT128_HAS_QUIET_NAN__	moc_predefs.h	331;"	d
__FLT128_MANT_DIG__	moc_predefs.h	73;"	d
__FLT128_MAX_10_EXP__	moc_predefs.h	8;"	d
__FLT128_MAX_EXP__	moc_predefs.h	196;"	d
__FLT128_MAX__	moc_predefs.h	270;"	d
__FLT128_MIN_10_EXP__	moc_predefs.h	70;"	d
__FLT128_MIN_EXP__	moc_predefs.h	67;"	d
__FLT128_MIN__	moc_predefs.h	324;"	d
__FLT16_DECIMAL_DIG__	moc_predefs.h	146;"	d
__FLT16_DENORM_MIN__	moc_predefs.h	173;"	d
__FLT16_DIG__	moc_predefs.h	200;"	d
__FLT16_EPSILON__	moc_predefs.h	38;"	d
__FLT16_HAS_DENORM__	moc_predefs.h	338;"	d
__FLT16_HAS_INFINITY__	moc_predefs.h	281;"	d
__FLT16_HAS_QUIET_NAN__	moc_predefs.h	300;"	d
__FLT16_MANT_DIG__	moc_predefs.h	165;"	d
__FLT16_MAX_10_EXP__	moc_predefs.h	123;"	d
__FLT16_MAX_EXP__	moc_predefs.h	235;"	d
__FLT16_MAX__	moc_predefs.h	266;"	d
__FLT16_MIN_10_EXP__	moc_predefs.h	180;"	d
__FLT16_MIN_EXP__	moc_predefs.h	112;"	d
__FLT16_MIN__	moc_predefs.h	319;"	d
__FLT32X_DECIMAL_DIG__	moc_predefs.h	28;"	d
__FLT32X_DENORM_MIN__	moc_predefs.h	375;"	d
__FLT32X_DIG__	moc_predefs.h	381;"	d
__FLT32X_EPSILON__	moc_predefs.h	176;"	d
__FLT32X_HAS_DENORM__	moc_predefs.h	132;"	d
__FLT32X_HAS_INFINITY__	moc_predefs.h	96;"	d
__FLT32X_HAS_QUIET_NAN__	moc_predefs.h	368;"	d
__FLT32X_MANT_DIG__	moc_predefs.h	233;"	d
__FLT32X_MAX_10_EXP__	moc_predefs.h	317;"	d
__FLT32X_MAX_EXP__	moc_predefs.h	3;"	d
__FLT32X_MAX__	moc_predefs.h	343;"	d
__FLT32X_MIN_10_EXP__	moc_predefs.h	386;"	d
__FLT32X_MIN_EXP__	moc_predefs.h	199;"	d
__FLT32X_MIN__	moc_predefs.h	396;"	d
__FLT32_DECIMAL_DIG__	moc_predefs.h	293;"	d
__FLT32_DENORM_MIN__	moc_predefs.h	259;"	d
__FLT32_DIG__	moc_predefs.h	87;"	d
__FLT32_EPSILON__	moc_predefs.h	336;"	d
__FLT32_HAS_DENORM__	moc_predefs.h	42;"	d
__FLT32_HAS_INFINITY__	moc_predefs.h	124;"	d
__FLT32_HAS_QUIET_NAN__	moc_predefs.h	148;"	d
__FLT32_MANT_DIG__	moc_predefs.h	197;"	d
__FLT32_MAX_10_EXP__	moc_predefs.h	209;"	d
__FLT32_MAX_EXP__	moc_predefs.h	158;"	d
__FLT32_MAX__	moc_predefs.h	144;"	d
__FLT32_MIN_10_EXP__	moc_predefs.h	275;"	d
__FLT32_MIN_EXP__	moc_predefs.h	16;"	d
__FLT32_MIN__	moc_predefs.h	185;"	d
__FLT64X_DECIMAL_DIG__	moc_predefs.h	181;"	d
__FLT64X_DENORM_MIN__	moc_predefs.h	95;"	d
__FLT64X_DIG__	moc_predefs.h	220;"	d
__FLT64X_EPSILON__	moc_predefs.h	83;"	d
__FLT64X_HAS_DENORM__	moc_predefs.h	244;"	d
__FLT64X_HAS_INFINITY__	moc_predefs.h	213;"	d
__FLT64X_HAS_QUIET_NAN__	moc_predefs.h	167;"	d
__FLT64X_MANT_DIG__	moc_predefs.h	78;"	d
__FLT64X_MAX_10_EXP__	moc_predefs.h	53;"	d
__FLT64X_MAX_EXP__	moc_predefs.h	297;"	d
__FLT64X_MAX__	moc_predefs.h	280;"	d
__FLT64X_MIN_10_EXP__	moc_predefs.h	110;"	d
__FLT64X_MIN_EXP__	moc_predefs.h	154;"	d
__FLT64X_MIN__	moc_predefs.h	333;"	d
__FLT64_DECIMAL_DIG__	moc_predefs.h	32;"	d
__FLT64_DENORM_MIN__	moc_predefs.h	170;"	d
__FLT64_DIG__	moc_predefs.h	238;"	d
__FLT64_EPSILON__	moc_predefs.h	105;"	d
__FLT64_HAS_DENORM__	moc_predefs.h	335;"	d
__FLT64_HAS_INFINITY__	moc_predefs.h	279;"	d
__FLT64_HAS_QUIET_NAN__	moc_predefs.h	274;"	d
__FLT64_MANT_DIG__	moc_predefs.h	113;"	d
__FLT64_MAX_10_EXP__	moc_predefs.h	122;"	d
__FLT64_MAX_EXP__	moc_predefs.h	327;"	d
__FLT64_MAX__	moc_predefs.h	313;"	d
__FLT64_MIN_10_EXP__	moc_predefs.h	178;"	d
__FLT64_MIN_EXP__	moc_predefs.h	108;"	d
__FLT64_MIN__	moc_predefs.h	364;"	d
__FLT_DECIMAL_DIG__	moc_predefs.h	398;"	d
__FLT_DENORM_MIN__	moc_predefs.h	350;"	d
__FLT_DIG__	moc_predefs.h	296;"	d
__FLT_EPSILON__	moc_predefs.h	88;"	d
__FLT_EVAL_METHOD_C99__	moc_predefs.h	175;"	d
__FLT_EVAL_METHOD_TS_18661_3__	moc_predefs.h	61;"	d
__FLT_EVAL_METHOD__	moc_predefs.h	29;"	d
__FLT_HAS_DENORM__	moc_predefs.h	118;"	d
__FLT_HAS_INFINITY__	moc_predefs.h	246;"	d
__FLT_HAS_QUIET_NAN__	moc_predefs.h	241;"	d
__FLT_MANT_DIG__	moc_predefs.h	188;"	d
__FLT_MAX_10_EXP__	moc_predefs.h	242;"	d
__FLT_MAX_EXP__	moc_predefs.h	302;"	d
__FLT_MAX__	moc_predefs.h	356;"	d
__FLT_MIN_10_EXP__	moc_predefs.h	363;"	d
__FLT_MIN_EXP__	moc_predefs.h	164;"	d
__FLT_MIN__	moc_predefs.h	9;"	d
__FLT_RADIX__	moc_predefs.h	223;"	d
__FP_FAST_FMA	moc_predefs.h	357;"	d
__FP_FAST_FMAF	moc_predefs.h	169;"	d
__FP_FAST_FMAF32	moc_predefs.h	307;"	d
__FP_FAST_FMAF32x	moc_predefs.h	337;"	d
__FP_FAST_FMAF64	moc_predefs.h	315;"	d
__GCC_ATOMIC_BOOL_LOCK_FREE	moc_predefs.h	56;"	d
__GCC_ATOMIC_CHAR16_T_LOCK_FREE	moc_predefs.h	81;"	d
__GCC_ATOMIC_CHAR32_T_LOCK_FREE	moc_predefs.h	33;"	d
__GCC_ATOMIC_CHAR_LOCK_FREE	moc_predefs.h	26;"	d
__GCC_ATOMIC_INT_LOCK_FREE	moc_predefs.h	195;"	d
__GCC_ATOMIC_LLONG_LOCK_FREE	moc_predefs.h	395;"	d
__GCC_ATOMIC_LONG_LOCK_FREE	moc_predefs.h	260;"	d
__GCC_ATOMIC_POINTER_LOCK_FREE	moc_predefs.h	77;"	d
__GCC_ATOMIC_SHORT_LOCK_FREE	moc_predefs.h	400;"	d
__GCC_ATOMIC_TEST_AND_SET_TRUEVAL	moc_predefs.h	295;"	d
__GCC_ATOMIC_WCHAR_T_LOCK_FREE	moc_predefs.h	231;"	d
__GCC_HAVE_DWARF2_CFI_ASM	moc_predefs.h	160;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_1	moc_predefs.h	21;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_16	moc_predefs.h	384;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_2	moc_predefs.h	22;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_4	moc_predefs.h	23;"	d
__GCC_HAVE_SYNC_COMPARE_AND_SWAP_8	moc_predefs.h	25;"	d
__GCC_IEC_559	moc_predefs.h	27;"	d
__GCC_IEC_559_COMPLEX	moc_predefs.h	10;"	d
__GLIBCXX_BITSIZE_INT_N_0	moc_predefs.h	228;"	d
__GLIBCXX_TYPE_INT_N_0	moc_predefs.h	371;"	d
__GNUC_MINOR__	moc_predefs.h	370;"	d
__GNUC_PATCHLEVEL__	moc_predefs.h	41;"	d
__GNUC_STDC_INLINE__	moc_predefs.h	334;"	d
__GNUC__	moc_predefs.h	114;"	d
__GNUG__	moc_predefs.h	149;"	d
__GXX_ABI_VERSION	moc_predefs.h	162;"	d
__GXX_EXPERIMENTAL_CXX0X__	moc_predefs.h	64;"	d
__GXX_RTTI	moc_predefs.h	115;"	d
__GXX_WEAK__	moc_predefs.h	89;"	d
__HAVE_SPECULATION_SAFE_VALUE	moc_predefs.h	129;"	d
__INT16_C	moc_predefs.h	378;"	d
__INT16_MAX__	moc_predefs.h	216;"	d
__INT16_TYPE__	moc_predefs.h	264;"	d
__INT32_C	moc_predefs.h	205;"	d
__INT32_MAX__	moc_predefs.h	97;"	d
__INT32_TYPE__	moc_predefs.h	360;"	d
__INT64_C	moc_predefs.h	75;"	d
__INT64_MAX__	moc_predefs.h	257;"	d
__INT64_TYPE__	moc_predefs.h	301;"	d
__INT8_C	moc_predefs.h	47;"	d
__INT8_MAX__	moc_predefs.h	351;"	d
__INT8_TYPE__	moc_predefs.h	221;"	d
__INTMAX_C	moc_predefs.h	12;"	d
__INTMAX_MAX__	moc_predefs.h	347;"	d
__INTMAX_TYPE__	moc_predefs.h	366;"	d
__INTMAX_WIDTH__	moc_predefs.h	107;"	d
__INTPTR_MAX__	moc_predefs.h	271;"	d
__INTPTR_TYPE__	moc_predefs.h	283;"	d
__INTPTR_WIDTH__	moc_predefs.h	131;"	d
__INT_FAST16_MAX__	moc_predefs.h	237;"	d
__INT_FAST16_TYPE__	moc_predefs.h	133;"	d
__INT_FAST16_WIDTH__	moc_predefs.h	372;"	d
__INT_FAST32_MAX__	moc_predefs.h	127;"	d
__INT_FAST32_TYPE__	moc_predefs.h	211;"	d
__INT_FAST32_WIDTH__	moc_predefs.h	251;"	d
__INT_FAST64_MAX__	moc_predefs.h	294;"	d
__INT_FAST64_TYPE__	moc_predefs.h	168;"	d
__INT_FAST64_WIDTH__	moc_predefs.h	290;"	d
__INT_FAST8_MAX__	moc_predefs.h	268;"	d
__INT_FAST8_TYPE__	moc_predefs.h	332;"	d
__INT_FAST8_WIDTH__	moc_predefs.h	341;"	d
__INT_LEAST16_MAX__	moc_predefs.h	255;"	d
__INT_LEAST16_TYPE__	moc_predefs.h	224;"	d
__INT_LEAST16_WIDTH__	moc_predefs.h	71;"	d
__INT_LEAST32_MAX__	moc_predefs.h	138;"	d
__INT_LEAST32_TYPE__	moc_predefs.h	328;"	d
__INT_LEAST32_WIDTH__	moc_predefs.h	365;"	d
__INT_LEAST64_MAX__	moc_predefs.h	306;"	d
__INT_LEAST64_TYPE__	moc_predefs.h	262;"	d
__INT_LEAST64_WIDTH__	moc_predefs.h	401;"	d
__INT_LEAST8_MAX__	moc_predefs.h	316;"	d
__INT_LEAST8_TYPE__	moc_predefs.h	265;"	d
__INT_LEAST8_WIDTH__	moc_predefs.h	48;"	d
__INT_MAX__	moc_predefs.h	299;"	d
__INT_WIDTH__	moc_predefs.h	98;"	d
__LDBL_DECIMAL_DIG__	moc_predefs.h	189;"	d
__LDBL_DENORM_MIN__	moc_predefs.h	377;"	d
__LDBL_DIG__	moc_predefs.h	397;"	d
__LDBL_EPSILON__	moc_predefs.h	226;"	d
__LDBL_HAS_DENORM__	moc_predefs.h	134;"	d
__LDBL_HAS_INFINITY__	moc_predefs.h	85;"	d
__LDBL_HAS_QUIET_NAN__	moc_predefs.h	111;"	d
__LDBL_MANT_DIG__	moc_predefs.h	277;"	d
__LDBL_MAX_10_EXP__	moc_predefs.h	321;"	d
__LDBL_MAX_EXP__	moc_predefs.h	66;"	d
__LDBL_MAX__	moc_predefs.h	51;"	d
__LDBL_MIN_10_EXP__	moc_predefs.h	390;"	d
__LDBL_MIN_EXP__	moc_predefs.h	312;"	d
__LDBL_MIN__	moc_predefs.h	91;"	d
__LONG_LONG_MAX__	moc_predefs.h	150;"	d
__LONG_LONG_WIDTH__	moc_predefs.h	156;"	d
__LONG_MAX__	moc_predefs.h	243;"	d
__LONG_WIDTH__	moc_predefs.h	352;"	d
__LP64__	moc_predefs.h	174;"	d
__NO_INLINE__	moc_predefs.h	187;"	d
__ORDER_BIG_ENDIAN__	moc_predefs.h	303;"	d
__ORDER_LITTLE_ENDIAN__	moc_predefs.h	18;"	d
__ORDER_PDP_ENDIAN__	moc_predefs.h	207;"	d
__PIC__	moc_predefs.h	353;"	d
__PIE__	moc_predefs.h	172;"	d
__PRAGMA_REDEFINE_EXTNAME	moc_predefs.h	253;"	d
__PTRDIFF_MAX__	moc_predefs.h	147;"	d
__PTRDIFF_TYPE__	moc_predefs.h	382;"	d
__PTRDIFF_WIDTH__	moc_predefs.h	103;"	d
__REGISTER_PREFIX__	moc_predefs.h	183;"	d
__SCHAR_MAX__	moc_predefs.h	72;"	d
__SCHAR_WIDTH__	moc_predefs.h	204;"	d
__SHRT_MAX__	moc_predefs.h	50;"	d
__SHRT_WIDTH__	moc_predefs.h	90;"	d
__SIG_ATOMIC_MAX__	moc_predefs.h	230;"	d
__SIG_ATOMIC_MIN__	moc_predefs.h	282;"	d
__SIG_ATOMIC_TYPE__	moc_predefs.h	36;"	d
__SIG_ATOMIC_WIDTH__	moc_predefs.h	261;"	d
__SIZEOF_DOUBLE__	moc_predefs.h	361;"	d
__SIZEOF_FLOAT__	moc_predefs.h	286;"	d
__SIZEOF_INT128__	moc_predefs.h	318;"	d
__SIZEOF_INT__	moc_predefs.h	79;"	d
__SIZEOF_LONG_DOUBLE__	moc_predefs.h	119;"	d
__SIZEOF_LONG_LONG__	moc_predefs.h	392;"	d
__SIZEOF_LONG__	moc_predefs.h	99;"	d
__SIZEOF_POINTER__	moc_predefs.h	80;"	d
__SIZEOF_PTRDIFF_T__	moc_predefs.h	232;"	d
__SIZEOF_SHORT__	moc_predefs.h	311;"	d
__SIZEOF_SIZE_T__	moc_predefs.h	151;"	d
__SIZEOF_WCHAR_T__	moc_predefs.h	329;"	d
__SIZEOF_WINT_T__	moc_predefs.h	155;"	d
__SIZE_MAX__	moc_predefs.h	19;"	d
__SIZE_TYPE__	moc_predefs.h	218;"	d
__SIZE_WIDTH__	moc_predefs.h	254;"	d
__SSP_STRONG__	moc_predefs.h	1;"	d
__STDC_HOSTED__	moc_predefs.h	84;"	d
__STDC_IEC_559_COMPLEX__	moc_predefs.h	201;"	d
__STDC_IEC_559__	moc_predefs.h	100;"	d
__STDC_ISO_10646__	moc_predefs.h	101;"	d
__STDC_UTF_16__	moc_predefs.h	121;"	d
__STDC_UTF_32__	moc_predefs.h	340;"	d
__STDC__	moc_predefs.h	380;"	d
__UINT16_C	moc_predefs.h	102;"	d
__UINT16_MAX__	moc_predefs.h	184;"	d
__UINT16_TYPE__	moc_predefs.h	284;"	d
__UINT32_C	moc_predefs.h	346;"	d
__UINT32_MAX__	moc_predefs.h	63;"	d
__UINT32_TYPE__	moc_predefs.h	385;"	d
__UINT64_C	moc_predefs.h	191;"	d
__UINT64_MAX__	moc_predefs.h	219;"	d
__UINT64_TYPE__	moc_predefs.h	345;"	d
__UINT8_C	moc_predefs.h	326;"	d
__UINT8_MAX__	moc_predefs.h	14;"	d
__UINT8_TYPE__	moc_predefs.h	186;"	d
__UINTMAX_C	moc_predefs.h	227;"	d
__UINTMAX_MAX__	moc_predefs.h	373;"	d
__UINTMAX_TYPE__	moc_predefs.h	58;"	d
__UINTPTR_MAX__	moc_predefs.h	288;"	d
__UINTPTR_TYPE__	moc_predefs.h	387;"	d
__UINT_FAST16_MAX__	moc_predefs.h	399;"	d
__UINT_FAST16_TYPE__	moc_predefs.h	249;"	d
__UINT_FAST32_MAX__	moc_predefs.h	239;"	d
__UINT_FAST32_TYPE__	moc_predefs.h	354;"	d
__UINT_FAST64_MAX__	moc_predefs.h	35;"	d
__UINT_FAST64_TYPE__	moc_predefs.h	298;"	d
__UINT_FAST8_MAX__	moc_predefs.h	43;"	d
__UINT_FAST8_TYPE__	moc_predefs.h	402;"	d
__UINT_LEAST16_MAX__	moc_predefs.h	5;"	d
__UINT_LEAST16_TYPE__	moc_predefs.h	212;"	d
__UINT_LEAST32_MAX__	moc_predefs.h	258;"	d
__UINT_LEAST32_TYPE__	moc_predefs.h	310;"	d
__UINT_LEAST64_MAX__	moc_predefs.h	49;"	d
__UINT_LEAST64_TYPE__	moc_predefs.h	240;"	d
__UINT_LEAST8_MAX__	moc_predefs.h	55;"	d
__UINT_LEAST8_TYPE__	moc_predefs.h	11;"	d
__USER_LABEL_PREFIX__	moc_predefs.h	82;"	d
__VERSION__	moc_predefs.h	190;"	d
__WCHAR_MAX__	moc_predefs.h	20;"	d
__WCHAR_MIN__	moc_predefs.h	74;"	d
__WCHAR_TYPE__	moc_predefs.h	285;"	d
__WCHAR_UNSIGNED__	moc_predefs.h	320;"	d
__WCHAR_WIDTH__	moc_predefs.h	143;"	d
__WINT_MAX__	moc_predefs.h	15;"	d
__WINT_MIN__	moc_predefs.h	68;"	d
__WINT_TYPE__	moc_predefs.h	309;"	d
__WINT_WIDTH__	moc_predefs.h	314;"	d
__aarch64__	moc_predefs.h	177;"	d
__cplusplus	moc_predefs.h	135;"	d
__cpp_alias_templates	moc_predefs.h	348;"	d
__cpp_attributes	moc_predefs.h	4;"	d
__cpp_binary_literals	moc_predefs.h	31;"	d
__cpp_constexpr	moc_predefs.h	358;"	d
__cpp_decltype	moc_predefs.h	292;"	d
__cpp_delegating_constructors	moc_predefs.h	117;"	d
__cpp_exceptions	moc_predefs.h	362;"	d
__cpp_hex_float	moc_predefs.h	159;"	d
__cpp_inheriting_constructors	moc_predefs.h	305;"	d
__cpp_initializer_lists	moc_predefs.h	157;"	d
__cpp_lambdas	moc_predefs.h	166;"	d
__cpp_nsdmi	moc_predefs.h	153;"	d
__cpp_range_based_for	moc_predefs.h	273;"	d
__cpp_raw_strings	moc_predefs.h	126;"	d
__cpp_ref_qualifiers	moc_predefs.h	136;"	d
__cpp_rtti	moc_predefs.h	217;"	d
__cpp_runtime_arrays	moc_predefs.h	344;"	d
__cpp_rvalue_reference	moc_predefs.h	44;"	d
__cpp_rvalue_references	moc_predefs.h	141;"	d
__cpp_static_assert	moc_predefs.h	17;"	d
__cpp_threadsafe_static_init	moc_predefs.h	93;"	d
__cpp_unicode_characters	moc_predefs.h	192;"	d
__cpp_unicode_literals	moc_predefs.h	248;"	d
__cpp_user_defined_literals	moc_predefs.h	393;"	d
__cpp_variadic_templates	moc_predefs.h	34;"	d
__gnu_linux__	moc_predefs.h	106;"	d
__has_include	moc_predefs.h	45;"	d
__has_include_next	moc_predefs.h	109;"	d
__linux	moc_predefs.h	59;"	d
__linux__	moc_predefs.h	69;"	d
__pic__	moc_predefs.h	287;"	d
__pie__	moc_predefs.h	116;"	d
__unix	moc_predefs.h	247;"	d
__unix__	moc_predefs.h	30;"	d
_connected	ai/websocketclientmanager.h	/^    bool _connected;$/;"	m	class:WebSocketClientManager
_dataQueue	ai/websocketclientmanager.h	/^    QQueue<QByteArray> _dataQueue;$/;"	m	class:WebSocketClientManager
_pWebSocket	ai/websocketclientmanager.h	/^    QWebSocket *_pWebSocket;$/;"	m	class:WebSocketClientManager
_running	ai/websocketclientmanager.h	/^    bool _running;$/;"	m	class:WebSocketClientManager
_url	ai/websocketclientmanager.h	/^    QString _url;$/;"	m	class:WebSocketClientManager
actMap	kvp_actions.h	/^    map<string, function<void(string)>> actMap;$/;"	m	class:KVP_Actions
aiEngine	voice/kvp_voicetransfer.h	/^    KVP_AIEngine *aiEngine = nullptr;$/;"	m	class:KVP_VoiceTransfer
alloc_packet	packet/kvp_packet.cpp	/^KVP_Packet *KVP_Packet::alloc_packet()$/;"	f	class:KVP_Packet
analysisOk	moc_kvp_aiengine.cpp	/^void KVP_AIEngine::analysisOk(QString _t1, QString _t2, QString _t3)$/;"	f	class:KVP_AIEngine
appMap	kvp_actions.h	/^    map<set<string>, string> appMap = {$/;"	m	class:KVP_Actions
audioData	input/kvp_input_real.h	/^    QByteArray audioData;$/;"	m	class:KVP_Input_Real
audioData	voice/kvp_voicetransfer.h	/^    char audioData[MAX_DATASIZE];$/;"	m	class:KVP_VoiceTransfer
audioInputSound	input/kvp_input_real.h	/^    QAudioInput *audioInputSound = nullptr; \/\/ 负责监听声音$/;"	m	class:KVP_Input_Real
callSessionFunction	dbus/kvp_dbusadapter.cpp	/^int KVP_DBusAdapter::callSessionFunction(const QString &_service,$/;"	f	class:KVP_DBusAdapter
closeFunc	kvp_actions.cpp	/^static void closeFunc(std::string _s)$/;"	f	file:
connectUrl	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::connectUrl(QString url)$/;"	f	class:WebSocketClientManager
data	moc_kvp_actions.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_KVP_Actions_t	file:
data	moc_kvp_aiengine.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_KVP_AIEngine_t	file:
data	moc_kvp_dbusadapter.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_KVP_DBusAdapter_t	file:
data	moc_kvp_input.cpp	/^    QByteArrayData data[6];$/;"	m	struct:qt_meta_stringdata_KVP_Input_t	file:
data	moc_kvp_input_file.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_KVP_Input_File_t	file:
data	moc_kvp_input_real.cpp	/^    QByteArrayData data[4];$/;"	m	struct:qt_meta_stringdata_KVP_Input_Real_t	file:
data	moc_kvp_voicetransfer.cpp	/^    QByteArrayData data[8];$/;"	m	struct:qt_meta_stringdata_KVP_VoiceTransfer_t	file:
data	moc_kvp_voicetransferthread.cpp	/^    QByteArrayData data[1];$/;"	m	struct:qt_meta_stringdata_KVP_VoiceTransferThread_t	file:
data	moc_websocketclientmanager.cpp	/^    QByteArrayData data[26];$/;"	m	struct:qt_meta_stringdata_WebSocketClientManager_t	file:
data	moc_widget.cpp	/^    QByteArrayData data[4];$/;"	m	struct:qt_meta_stringdata_Widget_t	file:
dataLen	voice/kvp_voicetransfer.h	/^    int dataLen = 0;$/;"	m	class:KVP_VoiceTransfer
dataReady	moc_kvp_input.cpp	/^void KVP_Input::dataReady(char * * _t1, int _t2)$/;"	f	class:KVP_Input
data_element_number	packet/kvp_packet.h	/^    int data_element_number;$/;"	m	class:KVP_Packet
data_element_size	packet/kvp_packet.h	/^    int data_element_size;$/;"	m	class:KVP_Packet
dbusErrorString	dbus/kvp_dbusadapter.h	10;"	d
dbusFunc	kvp_actions.cpp	/^static void dbusFunc(const QString &_service,$/;"	f	file:
disable	ai/kvp_aiengine.cpp	/^void KVP_AIEngine::disable()$/;"	f	class:KVP_AIEngine
dst_bufsize	kvp_resample.h	/^        dst_bufsize,$/;"	m	class:KVP_Resample
dst_bufsize	packet/kvp_packet.h	/^        dst_bufsize,$/;"	m	class:KVP_Packet
dst_ch_layout	kvp_resample.h	/^            dst_ch_layout;$/;"	m	class:KVP_Resample
dst_ch_layout	packet/kvp_packet.h	/^              dst_ch_layout;$/;"	m	class:KVP_Packet
dst_data	kvp_resample.h	/^            **dst_data;$/;"	m	class:KVP_Resample
dst_data	packet/kvp_packet.h	/^    __uint8_t **dst_data;$/;"	m	class:KVP_Packet
dst_linesize	kvp_resample.h	/^        dst_linesize,$/;"	m	class:KVP_Resample
dst_linesize	packet/kvp_packet.h	/^        dst_linesize,$/;"	m	class:KVP_Packet
dst_nb_channels	kvp_resample.h	/^        dst_nb_channels,$/;"	m	class:KVP_Resample
dst_nb_channels	packet/kvp_packet.h	/^        dst_nb_channels,$/;"	m	class:KVP_Packet
dst_nb_samples	kvp_resample.h	/^        dst_nb_samples,$/;"	m	class:KVP_Resample
dst_nb_samples	packet/kvp_packet.h	/^        dst_nb_samples,$/;"	m	class:KVP_Packet
dst_sample_fmt	kvp_resample.h	/^                    dst_sample_fmt;$/;"	m	class:KVP_Resample
dst_sample_fmt	packet/kvp_packet.h	/^                   dst_sample_fmt;$/;"	m	class:KVP_Packet
dst_sample_rate	kvp_resample.h	/^        dst_sample_rate,$/;"	m	class:KVP_Resample
dst_sample_rate	packet/kvp_packet.h	/^        dst_sample_rate,$/;"	m	class:KVP_Packet
enable	ai/kvp_aiengine.cpp	/^void KVP_AIEngine::enable()$/;"	f	class:KVP_AIEngine
enable	ai/websocketclientmanager.h	/^    bool enable;$/;"	m	class:WebSocketClientManager
enableTrans	voice/kvp_voicetransfer.h	/^    bool enableTrans;$/;"	m	class:KVP_VoiceTransfer
endDistinguish	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::endDistinguish()$/;"	f	class:WebSocketClientManager
end_time	ai/kvp_aiengine.h	/^    uint64_t end_time;$/;"	m	struct:result_t
err_msg	ai/kvp_aiengine.h	/^    QString err_msg;$/;"	m	struct:result_t
err_no	ai/kvp_aiengine.h	/^    int err_no;$/;"	m	struct:result_t
execAction	kvp_actions.cpp	/^void KVP_Actions::execAction(QString &_subject, QString &_predicate, QString &_object)$/;"	f	class:KVP_Actions
f	ai/websocketclientmanager.cpp	/^static QFile f;$/;"	v	file:
feedData	ai/kvp_aiengine.cpp	/^int KVP_AIEngine::feedData(char *_data, int _size)$/;"	f	class:KVP_AIEngine
fill_samples	main.cpp	/^static void fill_samples(double *dst, int nb_samples, int nb_channels, int sample_rate, double *t)$/;"	f	file:
formatSound	input/kvp_input_real.h	/^    QAudioFormat formatSound;$/;"	m	class:KVP_Input_Real
free_pakcet	packet/kvp_packet.cpp	/^void KVP_Packet::free_pakcet(KVP_Packet **_pkt)$/;"	f	class:KVP_Packet
get_format_from_sample_fmt	main.cpp	/^static int get_format_from_sample_fmt(const char **fmt,$/;"	f	file:
handleAItranslateData	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::handleAItranslateData(QString trans)$/;"	f	class:KVP_VoiceTransfer
handleDataInput	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::handleDataInput(QByteArray data, int len)$/;"	f	class:KVP_VoiceTransfer
handleSemantics	kvp_actions.cpp	/^void KVP_Actions::handleSemantics(QString &_intent, QString &_thing, QString &_enum, QString &_operator, QString &_property, QString &_joiner)$/;"	f	class:KVP_Actions
init	kvp_resample.cpp	/^int KVP_Resample::init(int _src_sample_rate,$/;"	f	class:KVP_Resample
initAIEngine	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::initAIEngine()$/;"	f	class:KVP_VoiceTransfer
initInput	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::initInput()$/;"	f	class:KVP_VoiceTransfer
initRealMic	input/kvp_input_real.cpp	/^void KVP_Input_Real::initRealMic()$/;"	f	class:KVP_Input_Real
initSocket	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::initSocket()$/;"	f	class:WebSocketClientManager
initWebSocket	ai/kvp_aiengine.cpp	/^void KVP_AIEngine::initWebSocket()$/;"	f	class:KVP_AIEngine
init_packet_src	packet/kvp_packet.cpp	/^int KVP_Packet::init_packet_src(KVP_Packet **_pkt, int _src_nb_channels, AVSampleFormat _src_sample_fmt, int _src_nb_samples)$/;"	f	class:KVP_Packet
inputIODevice	input/kvp_input_real.h	/^    QIODevice *inputIODevice = nullptr;$/;"	m	class:KVP_Input_Real
inputReal	voice/kvp_voicetransfer.h	/^    KVP_Input_Real *inputReal = nullptr;$/;"	m	class:KVP_VoiceTransfer
is_init_dst	packet/kvp_packet.h	/^         is_init_dst,$/;"	m	class:KVP_Packet
is_init_src	packet/kvp_packet.h	/^    bool is_init_src,$/;"	m	class:KVP_Packet
is_initialized	kvp_resample.h	/^    bool is_initialized;$/;"	m	class:KVP_Resample
is_resample	packet/kvp_packet.h	/^         is_resample;$/;"	m	class:KVP_Packet
kv	widget.cpp	/^static KVP_VoiceTransfer *kv = nullptr;$/;"	v	file:
linux	moc_predefs.h	272;"	d
log_id	ai/kvp_aiengine.h	/^    uint64_t log_id;$/;"	m	struct:result_t
m_isEnable	ai/kvp_aiengine.h	/^    bool m_isEnable;$/;"	m	class:KVP_AIEngine
main	main.cpp	/^int main(int argc, char *argv[])$/;"	f
max_dst_nb_samples	kvp_resample.h	/^        max_dst_nb_samples;$/;"	m	class:KVP_Resample
max_dst_nb_samples	packet/kvp_packet.h	/^        max_dst_nb_samples;$/;"	m	class:KVP_Packet
metaObject	moc_kvp_actions.cpp	/^const QMetaObject *KVP_Actions::metaObject() const$/;"	f	class:KVP_Actions
metaObject	moc_kvp_aiengine.cpp	/^const QMetaObject *KVP_AIEngine::metaObject() const$/;"	f	class:KVP_AIEngine
metaObject	moc_kvp_dbusadapter.cpp	/^const QMetaObject *KVP_DBusAdapter::metaObject() const$/;"	f	class:KVP_DBusAdapter
metaObject	moc_kvp_input.cpp	/^const QMetaObject *KVP_Input::metaObject() const$/;"	f	class:KVP_Input
metaObject	moc_kvp_input_file.cpp	/^const QMetaObject *KVP_Input_File::metaObject() const$/;"	f	class:KVP_Input_File
metaObject	moc_kvp_input_real.cpp	/^const QMetaObject *KVP_Input_Real::metaObject() const$/;"	f	class:KVP_Input_Real
metaObject	moc_kvp_voicetransfer.cpp	/^const QMetaObject *KVP_VoiceTransfer::metaObject() const$/;"	f	class:KVP_VoiceTransfer
metaObject	moc_kvp_voicetransferthread.cpp	/^const QMetaObject *KVP_VoiceTransferThread::metaObject() const$/;"	f	class:KVP_VoiceTransferThread
metaObject	moc_websocketclientmanager.cpp	/^const QMetaObject *WebSocketClientManager::metaObject() const$/;"	f	class:WebSocketClientManager
metaObject	moc_widget.cpp	/^const QMetaObject *Widget::metaObject() const$/;"	f	class:Widget
nb_samples	input/kvp_input.h	/^    int nb_samples;$/;"	m	class:KVP_Input
on_pushButton_2_clicked	widget.cpp	/^void Widget::on_pushButton_2_clicked()$/;"	f	class:Widget
on_pushButton_clicked	widget.cpp	/^void Widget::on_pushButton_clicked()$/;"	f	class:Widget
open	input/kvp_input_file.cpp	/^int KVP_Input_File::open(QString &_file)$/;"	f	class:KVP_Input_File
open	input/kvp_input_real.cpp	/^int KVP_Input_Real::open(QString &device)$/;"	f	class:KVP_Input_Real
openFunc	kvp_actions.cpp	/^static void openFunc(std::string _s)$/;"	f	file:
packetReady	moc_kvp_input_real.cpp	/^void KVP_Input_Real::packetReady(QByteArray _t1, int _t2)$/;"	f	class:KVP_Input_Real
pushButton	ui_widget.h	/^    QPushButton *pushButton;$/;"	m	class:Ui_Widget
pushButton_2	ui_widget.h	/^    QPushButton *pushButton_2;$/;"	m	class:Ui_Widget
qt_meta_data_KVP_AIEngine	moc_kvp_aiengine.cpp	/^static const uint qt_meta_data_KVP_AIEngine[] = {$/;"	v	file:
qt_meta_data_KVP_Actions	moc_kvp_actions.cpp	/^static const uint qt_meta_data_KVP_Actions[] = {$/;"	v	file:
qt_meta_data_KVP_DBusAdapter	moc_kvp_dbusadapter.cpp	/^static const uint qt_meta_data_KVP_DBusAdapter[] = {$/;"	v	file:
qt_meta_data_KVP_Input	moc_kvp_input.cpp	/^static const uint qt_meta_data_KVP_Input[] = {$/;"	v	file:
qt_meta_data_KVP_Input_File	moc_kvp_input_file.cpp	/^static const uint qt_meta_data_KVP_Input_File[] = {$/;"	v	file:
qt_meta_data_KVP_Input_Real	moc_kvp_input_real.cpp	/^static const uint qt_meta_data_KVP_Input_Real[] = {$/;"	v	file:
qt_meta_data_KVP_VoiceTransfer	moc_kvp_voicetransfer.cpp	/^static const uint qt_meta_data_KVP_VoiceTransfer[] = {$/;"	v	file:
qt_meta_data_KVP_VoiceTransferThread	moc_kvp_voicetransferthread.cpp	/^static const uint qt_meta_data_KVP_VoiceTransferThread[] = {$/;"	v	file:
qt_meta_data_WebSocketClientManager	moc_websocketclientmanager.cpp	/^static const uint qt_meta_data_WebSocketClientManager[] = {$/;"	v	file:
qt_meta_data_Widget	moc_widget.cpp	/^static const uint qt_meta_data_Widget[] = {$/;"	v	file:
qt_meta_stringdata_KVP_AIEngine	moc_kvp_aiengine.cpp	/^static const qt_meta_stringdata_KVP_AIEngine_t qt_meta_stringdata_KVP_AIEngine = {$/;"	v	file:
qt_meta_stringdata_KVP_AIEngine_t	moc_kvp_aiengine.cpp	/^struct qt_meta_stringdata_KVP_AIEngine_t {$/;"	s	file:
qt_meta_stringdata_KVP_Actions	moc_kvp_actions.cpp	/^static const qt_meta_stringdata_KVP_Actions_t qt_meta_stringdata_KVP_Actions = {$/;"	v	file:
qt_meta_stringdata_KVP_Actions_t	moc_kvp_actions.cpp	/^struct qt_meta_stringdata_KVP_Actions_t {$/;"	s	file:
qt_meta_stringdata_KVP_DBusAdapter	moc_kvp_dbusadapter.cpp	/^static const qt_meta_stringdata_KVP_DBusAdapter_t qt_meta_stringdata_KVP_DBusAdapter = {$/;"	v	file:
qt_meta_stringdata_KVP_DBusAdapter_t	moc_kvp_dbusadapter.cpp	/^struct qt_meta_stringdata_KVP_DBusAdapter_t {$/;"	s	file:
qt_meta_stringdata_KVP_Input	moc_kvp_input.cpp	/^static const qt_meta_stringdata_KVP_Input_t qt_meta_stringdata_KVP_Input = {$/;"	v	file:
qt_meta_stringdata_KVP_Input_File	moc_kvp_input_file.cpp	/^static const qt_meta_stringdata_KVP_Input_File_t qt_meta_stringdata_KVP_Input_File = {$/;"	v	file:
qt_meta_stringdata_KVP_Input_File_t	moc_kvp_input_file.cpp	/^struct qt_meta_stringdata_KVP_Input_File_t {$/;"	s	file:
qt_meta_stringdata_KVP_Input_Real	moc_kvp_input_real.cpp	/^static const qt_meta_stringdata_KVP_Input_Real_t qt_meta_stringdata_KVP_Input_Real = {$/;"	v	file:
qt_meta_stringdata_KVP_Input_Real_t	moc_kvp_input_real.cpp	/^struct qt_meta_stringdata_KVP_Input_Real_t {$/;"	s	file:
qt_meta_stringdata_KVP_Input_t	moc_kvp_input.cpp	/^struct qt_meta_stringdata_KVP_Input_t {$/;"	s	file:
qt_meta_stringdata_KVP_VoiceTransfer	moc_kvp_voicetransfer.cpp	/^static const qt_meta_stringdata_KVP_VoiceTransfer_t qt_meta_stringdata_KVP_VoiceTransfer = {$/;"	v	file:
qt_meta_stringdata_KVP_VoiceTransferThread	moc_kvp_voicetransferthread.cpp	/^static const qt_meta_stringdata_KVP_VoiceTransferThread_t qt_meta_stringdata_KVP_VoiceTransferThread = {$/;"	v	file:
qt_meta_stringdata_KVP_VoiceTransferThread_t	moc_kvp_voicetransferthread.cpp	/^struct qt_meta_stringdata_KVP_VoiceTransferThread_t {$/;"	s	file:
qt_meta_stringdata_KVP_VoiceTransfer_t	moc_kvp_voicetransfer.cpp	/^struct qt_meta_stringdata_KVP_VoiceTransfer_t {$/;"	s	file:
qt_meta_stringdata_WebSocketClientManager	moc_websocketclientmanager.cpp	/^static const qt_meta_stringdata_WebSocketClientManager_t qt_meta_stringdata_WebSocketClientManager = {$/;"	v	file:
qt_meta_stringdata_WebSocketClientManager_t	moc_websocketclientmanager.cpp	/^struct qt_meta_stringdata_WebSocketClientManager_t {$/;"	s	file:
qt_meta_stringdata_Widget	moc_widget.cpp	/^static const qt_meta_stringdata_Widget_t qt_meta_stringdata_Widget = {$/;"	v	file:
qt_meta_stringdata_Widget_t	moc_widget.cpp	/^struct qt_meta_stringdata_Widget_t {$/;"	s	file:
qt_metacall	moc_kvp_actions.cpp	/^int KVP_Actions::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Actions
qt_metacall	moc_kvp_aiengine.cpp	/^int KVP_AIEngine::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_AIEngine
qt_metacall	moc_kvp_dbusadapter.cpp	/^int KVP_DBusAdapter::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_DBusAdapter
qt_metacall	moc_kvp_input.cpp	/^int KVP_Input::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input
qt_metacall	moc_kvp_input_file.cpp	/^int KVP_Input_File::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input_File
qt_metacall	moc_kvp_input_real.cpp	/^int KVP_Input_Real::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input_Real
qt_metacall	moc_kvp_voicetransfer.cpp	/^int KVP_VoiceTransfer::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_VoiceTransfer
qt_metacall	moc_kvp_voicetransferthread.cpp	/^int KVP_VoiceTransferThread::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_VoiceTransferThread
qt_metacall	moc_websocketclientmanager.cpp	/^int WebSocketClientManager::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WebSocketClientManager
qt_metacall	moc_widget.cpp	/^int Widget::qt_metacall(QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Widget
qt_metacast	moc_kvp_actions.cpp	/^void *KVP_Actions::qt_metacast(const char *_clname)$/;"	f	class:KVP_Actions
qt_metacast	moc_kvp_aiengine.cpp	/^void *KVP_AIEngine::qt_metacast(const char *_clname)$/;"	f	class:KVP_AIEngine
qt_metacast	moc_kvp_dbusadapter.cpp	/^void *KVP_DBusAdapter::qt_metacast(const char *_clname)$/;"	f	class:KVP_DBusAdapter
qt_metacast	moc_kvp_input.cpp	/^void *KVP_Input::qt_metacast(const char *_clname)$/;"	f	class:KVP_Input
qt_metacast	moc_kvp_input_file.cpp	/^void *KVP_Input_File::qt_metacast(const char *_clname)$/;"	f	class:KVP_Input_File
qt_metacast	moc_kvp_input_real.cpp	/^void *KVP_Input_Real::qt_metacast(const char *_clname)$/;"	f	class:KVP_Input_Real
qt_metacast	moc_kvp_voicetransfer.cpp	/^void *KVP_VoiceTransfer::qt_metacast(const char *_clname)$/;"	f	class:KVP_VoiceTransfer
qt_metacast	moc_kvp_voicetransferthread.cpp	/^void *KVP_VoiceTransferThread::qt_metacast(const char *_clname)$/;"	f	class:KVP_VoiceTransferThread
qt_metacast	moc_websocketclientmanager.cpp	/^void *WebSocketClientManager::qt_metacast(const char *_clname)$/;"	f	class:WebSocketClientManager
qt_metacast	moc_widget.cpp	/^void *Widget::qt_metacast(const char *_clname)$/;"	f	class:Widget
qt_static_metacall	moc_kvp_actions.cpp	/^void KVP_Actions::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Actions
qt_static_metacall	moc_kvp_aiengine.cpp	/^void KVP_AIEngine::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_AIEngine
qt_static_metacall	moc_kvp_dbusadapter.cpp	/^void KVP_DBusAdapter::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_DBusAdapter
qt_static_metacall	moc_kvp_input.cpp	/^void KVP_Input::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input
qt_static_metacall	moc_kvp_input_file.cpp	/^void KVP_Input_File::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input_File
qt_static_metacall	moc_kvp_input_real.cpp	/^void KVP_Input_Real::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_Input_Real
qt_static_metacall	moc_kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_VoiceTransfer
qt_static_metacall	moc_kvp_voicetransferthread.cpp	/^void KVP_VoiceTransferThread::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:KVP_VoiceTransferThread
qt_static_metacall	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:WebSocketClientManager
qt_static_metacall	moc_widget.cpp	/^void Widget::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)$/;"	f	class:Widget
read	input/kvp_input_file.cpp	/^int KVP_Input_File::read(char *_data, int _size, int _number)$/;"	f	class:KVP_Input_File
readData	input/kvp_input_real.cpp	/^void KVP_Input_Real::readData()$/;"	f	class:KVP_Input_Real
resample	kvp_resample.cpp	/^int KVP_Resample::resample(uint8_t **_src_data)$/;"	f	class:KVP_Resample
result	ai/kvp_aiengine.h	/^    QString result;$/;"	m	struct:result_t
result_t	ai/kvp_aiengine.h	/^struct result_t {$/;"	s
retranslateUi	ui_widget.h	/^    void retranslateUi(QWidget *Widget)$/;"	f	class:Ui_Widget
running	ai/websocketclientmanager.cpp	/^bool WebSocketClientManager::running() const$/;"	f	class:WebSocketClientManager
sendBinaryMessage	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::sendBinaryMessage(char* data, int len)$/;"	f	class:WebSocketClientManager
sendSessionMessage	dbus/kvp_dbusadapter.cpp	/^int KVP_DBusAdapter::sendSessionMessage(const QDBusMessage &_msg, QDBusError &_err)$/;"	f	class:KVP_DBusAdapter
sessionDBus	dbus/kvp_dbusadapter.cpp	/^QDBusConnection sessionDBus = QDBusConnection::sessionBus();$/;"	v
setUrl	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::setUrl(const QString &url)$/;"	f	class:WebSocketClientManager
set_nb_samples	input/kvp_input.h	/^    void set_nb_samples(int _nb_samples) {nb_samples = _nb_samples;}$/;"	f	class:KVP_Input
setupUi	ui_widget.h	/^    void setupUi(QWidget *Widget)$/;"	f	class:Ui_Widget
sig_send	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::sig_send(QByteArray _t1)$/;"	f	class:WebSocketClientManager
signal_connected	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_connected()$/;"	f	class:WebSocketClientManager
signal_disconnected	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_disconnected()$/;"	f	class:WebSocketClientManager
signal_error	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_error(QString _t1)$/;"	f	class:WebSocketClientManager
signal_sendBinaryMessageResult	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_sendBinaryMessageResult(bool _t1)$/;"	f	class:WebSocketClientManager
signal_sendTextMessageResult	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_sendTextMessageResult(bool _t1)$/;"	f	class:WebSocketClientManager
signal_textFrameReceived	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_textFrameReceived(QString _t1, bool _t2)$/;"	f	class:WebSocketClientManager
signal_textMessageReceived	moc_websocketclientmanager.cpp	/^void WebSocketClientManager::signal_textMessageReceived(QString _t1)$/;"	f	class:WebSocketClientManager
simple_va_fun	main.cpp	/^void simple_va_fun(int i,...)$/;"	f
slotWebSocketMessage	ai/kvp_aiengine.cpp	/^void KVP_AIEngine::slotWebSocketMessage(QString str)$/;"	f	class:KVP_AIEngine
slot_connected	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_connected()$/;"	f	class:WebSocketClientManager
slot_disconnected	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_disconnected()$/;"	f	class:WebSocketClientManager
slot_error	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_error(QAbstractSocket::SocketError error)$/;"	f	class:WebSocketClientManager
slot_sendBinaryMessage	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_sendBinaryMessage(const QByteArray &data)$/;"	f	class:WebSocketClientManager
slot_sendTextMessage	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_sendTextMessage(const QString &message)$/;"	f	class:WebSocketClientManager
slot_stop	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_stop()$/;"	f	class:WebSocketClientManager
slot_textFrameReceived	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_textFrameReceived(const QString &frame, bool isLastFrame)$/;"	f	class:WebSocketClientManager
slot_textMessageReceived	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::slot_textMessageReceived(const QString &message)$/;"	f	class:WebSocketClientManager
sn	ai/kvp_aiengine.h	/^    QString sn;$/;"	m	struct:result_t
srcFile	input/kvp_input_file.h	/^    FILE *srcFile;$/;"	m	class:KVP_Input_File
src_bufsize	kvp_resample.h	/^        src_bufsize,$/;"	m	class:KVP_Resample
src_bufsize	packet/kvp_packet.h	/^        src_bufsize,$/;"	m	class:KVP_Packet
src_ch_layout	kvp_resample.h	/^    int64_t src_ch_layout,$/;"	m	class:KVP_Resample
src_ch_layout	packet/kvp_packet.h	/^    __int64_t src_ch_layout,$/;"	m	class:KVP_Packet
src_data	kvp_resample.h	/^    uint8_t **src_data,$/;"	m	class:KVP_Resample
src_data	packet/kvp_packet.h	/^    __uint8_t **src_data;$/;"	m	class:KVP_Packet
src_linesize	kvp_resample.h	/^        src_linesize,$/;"	m	class:KVP_Resample
src_linesize	packet/kvp_packet.h	/^        src_linesize,$/;"	m	class:KVP_Packet
src_nb_channels	kvp_resample.h	/^        src_nb_channels,$/;"	m	class:KVP_Resample
src_nb_channels	packet/kvp_packet.h	/^    int src_nb_channels,$/;"	m	class:KVP_Packet
src_nb_samples	kvp_resample.h	/^        src_nb_samples,$/;"	m	class:KVP_Resample
src_nb_samples	packet/kvp_packet.h	/^        src_nb_samples,$/;"	m	class:KVP_Packet
src_sample_fmt	kvp_resample.h	/^    AVSampleFormat  src_sample_fmt,$/;"	m	class:KVP_Resample
src_sample_fmt	packet/kvp_packet.h	/^    AVSampleFormat src_sample_fmt,$/;"	m	class:KVP_Packet
src_sample_rate	kvp_resample.h	/^        src_sample_rate,$/;"	m	class:KVP_Resample
src_sample_rate	packet/kvp_packet.h	/^        src_sample_rate,$/;"	m	class:KVP_Packet
start	ai/websocketclientmanager.h	/^    bool start;$/;"	m	class:WebSocketClientManager
startDistinguish	ai/websocketclientmanager.cpp	/^void WebSocketClientManager::startDistinguish()$/;"	f	class:WebSocketClientManager
startMic	input/kvp_input_real.cpp	/^void KVP_Input_Real::startMic()$/;"	f	class:KVP_Input_Real
startReal	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::startReal()$/;"	f	class:KVP_VoiceTransfer
start_time	ai/kvp_aiengine.h	/^    uint64_t start_time;$/;"	m	struct:result_t
staticMetaObject	moc_kvp_actions.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_Actions::staticMetaObject = { {$/;"	m	class:KVP_Actions	file:
staticMetaObject	moc_kvp_aiengine.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_AIEngine::staticMetaObject = { {$/;"	m	class:KVP_AIEngine	file:
staticMetaObject	moc_kvp_dbusadapter.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_DBusAdapter::staticMetaObject = { {$/;"	m	class:KVP_DBusAdapter	file:
staticMetaObject	moc_kvp_input.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_Input::staticMetaObject = { {$/;"	m	class:KVP_Input	file:
staticMetaObject	moc_kvp_input_file.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_Input_File::staticMetaObject = { {$/;"	m	class:KVP_Input_File	file:
staticMetaObject	moc_kvp_input_real.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_Input_Real::staticMetaObject = { {$/;"	m	class:KVP_Input_Real	file:
staticMetaObject	moc_kvp_voicetransfer.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_VoiceTransfer::staticMetaObject = { {$/;"	m	class:KVP_VoiceTransfer	file:
staticMetaObject	moc_kvp_voicetransferthread.cpp	/^QT_INIT_METAOBJECT const QMetaObject KVP_VoiceTransferThread::staticMetaObject = { {$/;"	m	class:KVP_VoiceTransferThread	file:
staticMetaObject	moc_websocketclientmanager.cpp	/^QT_INIT_METAOBJECT const QMetaObject WebSocketClientManager::staticMetaObject = { {$/;"	m	class:WebSocketClientManager	file:
staticMetaObject	moc_widget.cpp	/^QT_INIT_METAOBJECT const QMetaObject Widget::staticMetaObject = { {$/;"	m	class:Widget	file:
stopMic	input/kvp_input_real.cpp	/^void KVP_Input_Real::stopMic()$/;"	f	class:KVP_Input_Real
stream	ai/websocketclientmanager.cpp	/^static QDataStream stream;$/;"	v	file:
stringdata0	moc_kvp_actions.cpp	/^    char stringdata0[12];$/;"	m	struct:qt_meta_stringdata_KVP_Actions_t	file:
stringdata0	moc_kvp_aiengine.cpp	/^    char stringdata0[62];$/;"	m	struct:qt_meta_stringdata_KVP_AIEngine_t	file:
stringdata0	moc_kvp_dbusadapter.cpp	/^    char stringdata0[16];$/;"	m	struct:qt_meta_stringdata_KVP_DBusAdapter_t	file:
stringdata0	moc_kvp_input.cpp	/^    char stringdata0[45];$/;"	m	struct:qt_meta_stringdata_KVP_Input_t	file:
stringdata0	moc_kvp_input_file.cpp	/^    char stringdata0[15];$/;"	m	struct:qt_meta_stringdata_KVP_Input_File_t	file:
stringdata0	moc_kvp_input_real.cpp	/^    char stringdata0[37];$/;"	m	struct:qt_meta_stringdata_KVP_Input_Real_t	file:
stringdata0	moc_kvp_voicetransfer.cpp	/^    char stringdata0[84];$/;"	m	struct:qt_meta_stringdata_KVP_VoiceTransfer_t	file:
stringdata0	moc_kvp_voicetransferthread.cpp	/^    char stringdata0[24];$/;"	m	struct:qt_meta_stringdata_KVP_VoiceTransferThread_t	file:
stringdata0	moc_websocketclientmanager.cpp	/^    char stringdata0[426];$/;"	m	struct:qt_meta_stringdata_WebSocketClientManager_t	file:
stringdata0	moc_widget.cpp	/^    char stringdata0[54];$/;"	m	struct:qt_meta_stringdata_Widget_t	file:
swrCtx	kvp_resample.h	/^    SwrContext *swrCtx;$/;"	m	class:KVP_Resample
sys_lockscreen	kvp_actions.cpp	/^static void sys_lockscreen(QString &_intent, QString &_thing, QString &_enum, QString &_operator, QString &_property, QString &_joiner)$/;"	f	file:
sys_restart	kvp_actions.cpp	/^static void sys_restart(QString &_intent, QString &_thing, QString &_enum, QString &_operator, QString &_property, QString &_joiner)$/;"	f	file:
sys_shutdown	kvp_actions.cpp	/^static void sys_shutdown(QString &_intent, QString &_thing, QString &_enum, QString &_operator, QString &_property, QString &_joiner)$/;"	f	file:
testEnd	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::testEnd()$/;"	f	class:KVP_VoiceTransfer
testStart	voice/kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::testStart()$/;"	f	class:KVP_VoiceTransfer
translateOk	moc_kvp_aiengine.cpp	/^void KVP_AIEngine::translateOk(QString _t1)$/;"	f	class:KVP_AIEngine
translateOk	moc_kvp_voicetransfer.cpp	/^void KVP_VoiceTransfer::translateOk(QString _t1)$/;"	f	class:KVP_VoiceTransfer
type	ai/kvp_aiengine.h	/^    QString type;$/;"	m	struct:result_t
ui	widget.h	/^    Ui::Widget *ui;$/;"	m	class:Widget
uninit	kvp_resample.cpp	/^void KVP_Resample::uninit()$/;"	f	class:KVP_Resample
unix	moc_predefs.h	214;"	d
url	ai/websocketclientmanager.cpp	/^QString WebSocketClientManager::url() const$/;"	f	class:WebSocketClientManager
wscm	ai/kvp_aiengine.h	/^    WebSocketClientManager *wscm;$/;"	m	class:KVP_AIEngine
~KVP_Actions	kvp_actions.cpp	/^KVP_Actions::~KVP_Actions()$/;"	f	class:KVP_Actions
~KVP_DBusAdapter	dbus/kvp_dbusadapter.cpp	/^KVP_DBusAdapter::~KVP_DBusAdapter()$/;"	f	class:KVP_DBusAdapter
~KVP_Input	input/kvp_input.cpp	/^KVP_Input::~KVP_Input()$/;"	f	class:KVP_Input
~KVP_Input_File	input/kvp_input_file.cpp	/^KVP_Input_File::~KVP_Input_File()$/;"	f	class:KVP_Input_File
~KVP_Packet	packet/kvp_packet.cpp	/^KVP_Packet::~KVP_Packet()$/;"	f	class:KVP_Packet
~KVP_Resample	kvp_resample.cpp	/^KVP_Resample::~KVP_Resample()$/;"	f	class:KVP_Resample
~WebSocketClientManager	ai/websocketclientmanager.cpp	/^WebSocketClientManager::~WebSocketClientManager()$/;"	f	class:WebSocketClientManager
~Widget	widget.cpp	/^Widget::~Widget()$/;"	f	class:Widget
